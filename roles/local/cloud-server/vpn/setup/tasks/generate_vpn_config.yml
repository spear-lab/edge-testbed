---
- name: Generate OpenVPN config
  community.docker.docker_container:
    name: ovpn_genconfig
    image: "{{ _gv__vpn_image }}"
    # EXPLANATION:
    # -s : This is the dynamic (~DHCP) IP range for clients.
    #      The first IP will be used by the server.
    #      The rest will be used by people connecting to our VPN.
    # We use dynamic and static IPs.
    # These are split into two disjunct subnets to avoid collisions.
    # -r : Adds a route to the vpn server and tells it to also handle the static hosts.
    #      Otherwise we could not reach the static (cluster) hosts.
    # -p : Pushes this (static) route to all connecting clients.
    #      Without it users could not reach the static vpn members (cluster devices).
    # -c : Ensures that vpn clients can connect to each other.
    # -d : Deactivates vpn default routes. I.e. Avoid piping the entire traffic via the VPN.
    #      With this flag only vpn relevant traffic goes through the vpn tunnel.
    #      This is also called split tunneling.
    # -N : Configures NAT to access external server network.
    command: >
      ovpn_genconfig
      -s {{ _gv__vpn_dynamic_base_ip }}/24
      -c
      -d
      -N
      -u udp://{{ _gv__cloud_server_public_ip }}:{{ _gv__vpn_port }}
    volumes:
      - "{{ _gv__vpn_data_volume_name }}:/etc/openvpn"
    auto_remove: true

# NOTE: Fixes issues between different OpenVPN versions.
- name: Remove compression lines from OpenVPN config
  ansible.builtin.lineinfile:
    path: "{{ _gv__vpn_data_volume_path }}/openvpn.conf"
    regexp: '^(comp-lzo no|push "comp-lzo no")$'
    state: absent
  become: true

- name: Ensure custom configurations are present
  ansible.builtin.lineinfile:
    path: "{{ _gv__vpn_data_volume_path }}/openvpn.conf"
    line: "{{ item }}"
    state: present
  loop:
    - duplicate-cn
    - keepalive 10 30
    - route 10.66.71.0 255.255.255.0
    - push "route 10.66.71.0 255.255.255.0"
