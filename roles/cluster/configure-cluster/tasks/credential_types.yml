---
# TODO: Evaluate & Discuss if we need all of those custom credential types or if we can replace them via already pre-build AWX credential types.
# In general the credentials in our current setup are not uniform and quite confusing.

# NOTE: AWX comes with several pre-configured credential-types.
# Instead of GETting all of them and filtering this large set we simply set custom ones to absent.

- awx.awx.credential_type:
    name: "{{ __gitlab_docker_deploy_access_credential_type_name }}"
    # NOTE: This type seems to be used for custom credentials.
    kind: cloud
    inputs:
      fields:
        - id: gitlab_user
          type: string
          label: Username
          secret: true
        - id: gitlab_token
          type: string
          label: Password
          secret: true
      required:
        - gitlab_user
        - gitlab_token
    injectors:
      # NOTE: We want to have the unresolved variable notion here.
      extra_vars:
        gitlab_registry_user: "{% raw %}{{ gitlab_user }}{% endraw %}"
        gitlab_registry_token: "{% raw %}{{ gitlab_token }}{% endraw %}"
    state: "{{ __state }}"

- awx.awx.credential_type:
    name: "{{ __gitlab_robot_configs_write_token_credential_type_name }}"
    kind: cloud
    inputs:
      fields:
        - id: token
          type: string
          label: Token
          secret: true
      required:
        - token
    injectors:
      extra_vars:
        robot_configs_token: "{% raw %}{{ token }}{% endraw %}"
    state: "{{ __state }}"

- awx.awx.credential_type:
    name: "{{ __gitlab_api_read_token_credential_type_name }}"
    kind: cloud
    inputs:
      fields:
        - id: token
          type: string
          label: Token
          secret: true
      required:
        - token
    injectors:
      extra_vars:
        gitlab_api_read_token: "{% raw %}{{ token }}{% endraw %}"
    state: "{{ __state }}"

- awx.awx.credential_type:
    name: "{{ __backend_access_credential_type_name }}"
    kind: cloud
    inputs:
      fields:
        - id: staging_backend_key
          type: string
          label: StagingKey
          secret: true
        - id: prod_backend_key
          type: string
          label: ProductionKey
          secret: true
      required:
        - staging_backend_key
        - prod_backend_key
    injectors:
      extra_vars:
        prod_backend_api_key: "{% raw %}{{ prod_backend_key }}{% endraw %}"
        staging_backend_api_key: "{% raw %}{{ staging_backend_key }}{% endraw %}"
    state: "{{ __state }}"

- awx.awx.credential_type:
    name: Jetson password
    description: The initial jetson password as an ansible variable 'jetson_password'.
    kind: cloud
    inputs:
      fields:
        - id: password
          type: string
          label: Password
          secret: true
      required:
        - password
    injectors:
      extra_vars:
        jetson_password: "{% raw %}{{ password }}{% endraw %}"
    state: "{{ __state }}"
