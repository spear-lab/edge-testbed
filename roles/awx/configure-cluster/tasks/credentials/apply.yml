---
- name: Delete initial Demo Credential
  awx.awx.credential:
    name: Demo Credential
    credential_type: Machine
    state: absent

- name: Ensure it-management git repository access credentials exist
  block:
    - name: Ensure it-management repository read access credential
      awx.awx.credential:
        name: "{{ __it_management_read_repository_credential_name }}"
        credential_type: Source Control
        state: present
        organization: Cartken
        inputs:
          username: "{{ it_management_read_repo_deploy_token_name }}"
          password: "{{ it_management_read_repo_deploy_token_pwd }}"

    - name: Ensure it-management image registry read access credential
      awx.awx.credential:
        name: "{{ __it_management_read_image_registry_credential_name }}"
        credential_type: Container Registry
        state: present
        organization: Cartken
        inputs:
          username: "{{ it_management_read_image_registry_deploy_token_name }}"
          password: "{{ it_management_read_image_registry_deploy_token_pwd }}"
          host: registry.gitlab.com

- name: Ensure main repo git credentials exist
  block:
    - name: "Ensure {{ __awx_docker_deb_deploy_token_credential_name }} credentials exist"
      awx.awx.credential:
        name: "{{ __awx_docker_deb_deploy_token_credential_name }}"
        credential_type: "{{ __gitlab_docker_deploy_access_credential_type_name }}"
        state: present
        organization: Cartken
        inputs:
          gitlab_user: "{{ main_repo_read_registries_deploy_token_name }}"
          gitlab_token: "{{ main_repo_read_registries_deploy_token_pwd }}"

    - name: "Ensure {{ __gitlab_api_read_token_credential_name }} credentials exist"
      awx.awx.credential:
        name: "{{ __gitlab_api_read_token_credential_name }}"
        credential_type: "{{ __gitlab_api_read_token_credential_type_name }}"
        state: present
        organization: Cartken
        inputs:
          token: "{{ main_repo_api_read_access_token }}"

- name: "Ensure {{ __gitlab_robot_configs_write_token_credential_name }} credentials exist"
  awx.awx.credential:
    name: "{{ __gitlab_robot_configs_write_token_credential_name }}"
    credential_type: "{{ __gitlab_robot_configs_write_token_credential_type_name }}"
    state: present
    organization: Cartken
    description: Cart access token that allows read/write to the robot configs repo.
    inputs:
      token: "{{ robot_configs_write_token }}"

- name: "Ensure Robot password credentials exist"
  awx.awx.credential:
    name: Robot password
    credential_type: Machine
    state: present
    organization: Cartken
    description: machine access
    inputs:
      username: cartken
      password: "{{ robot_password }}"
      become_method: sudo
      become_username: root
      become_password: "{{ privilege_escalation_password }}"

- name: "Ensure Pi root access credentials exist"
  awx.awx.credential:
    name: Pi root access
    credential_type: Machine
    state: present
    organization: Cartken
    description: machine access
    inputs:
      become_method: sudo
      become_username: root
      become_password: "{{ privilege_escalation_password }}"

- name: "Ensure {{ __cartken_backend_access_credential_name }} credentials exist"
  awx.awx.credential:
    name: "{{ __cartken_backend_access_credential_name }}"
    credential_type: "{{ __backend_access_credential_type_name }}"
    state: present
    organization: Cartken
    inputs:
      prod_backend_key: "{{ prod_go_ops_backend_api_key }}"
      staging_backend_key: "{{ staging_go_ops_backend_api_key }}"

- name: "Ensure Jetson password credentials exist"
  awx.awx.credential:
    name: Jetson password
    credential_type: Jetson password
    state: present
    organization: Cartken
    inputs:
      password: "{{ initial_jetson_password }}"
